name: Build

on: [push, pull_request]

env:
  MPLBACKEND: agg

jobs:
  # Check code style
  code:
    name: code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: psf/black@stable

  # Make sure all necessary files are included in a release
  manifest:
    name: check manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: pip install manifix

      - name: Check MANIFEST.in file
        run: python setup.py manifix

  # Check installation, docstring tests, tests and report and upload coverage
  linux:
    runs-on: ubuntu-latest
    name: ubuntu-latest-py${{ matrix.python-version }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python and pip versions
        run: python -V; pip -V

      - name: Install dependencies and package
        shell: bash
        run: pip install -U -e .'[tests]'

      - name: Install '3d' extra dependencies
        if: ${{ matrix.python-version == 3.9 }}
        shell: bash
        run: pip install .'[3d]'

      - name: Install virtual buffer package
        run: |
          sudo apt-get update
          sudo apt-get install xvfb

      - name: Display package versions
        run: pip list

      - name: Run docstring tests
        continue-on-error: true
        run: pytest --doctest-modules --ignore-glob=kikuchipy/*/tests

      - name: Run tests
        run: xvfb-run pytest --cov=kikuchipy --pyargs kikuchipy

      - name: Generate line coverage
        run: coverage report --show-missing

      - name: Upload coverage to Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true

  # Check oldest supported versions of dependencies
  linux-oldest:
    runs-on: ubuntu-latest
    name: ubuntu-latest-py${{ matrix.python-version }}-oldest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python and pip versions
        run: python -V; pip -V

      - name: Install dependencies and package
        shell: bash
        run: pip install -U -e .'[tests]'

      - name: Install '3d' extra dependencies
        shell: bash
        run: pip install .'[3d]'

      - name: Install oldest supported versions of dependencies
        run: pip install dask==2021.8.1 diffsims==0.4 hyperspy==1.6.5 matplotlib==3.3 numba==0.48 numpy==1.19 orix==0.8 scikit-image==0.16.2 scipy==1.7

      - name: Install virtual buffer package
        run: |
          sudo apt-get update
          sudo apt-get install xvfb

      - name: Display package versions
        run: pip list

      - name: Run docstring tests
        continue-on-error: true
        run: pytest --doctest-modules --ignore-glob=kikuchipy/*/tests

      - name: Run tests
        run: xvfb-run pytest --cov=kikuchipy --pyargs kikuchipy

      - name: Generate line coverage
        run: coverage report --show-missing

      - name: Upload coverage to Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true

  # Check installation and tests
  macos:
    runs-on: macos-latest
    name: macos-latest-py${{ matrix.python-version }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python and pip versions
        run: python -V; pip -V

      - name: Install dependencies and package
        shell: bash
        run: pip install -U -e .'[tests]'

      - name: Install '3d' extra dependencies
        if: ${{ matrix.python-version == 3.9 }}
        shell: bash
        run: pip install .'[3d]'

      - name: Display package versions
        run: pip list

      - name: Run tests
        run: pytest --cov=kikuchipy --pyargs kikuchipy

  # Check installation and tests
  windows:
    runs-on: windows-latest
    name: windows-latest-py${{ matrix.python-version }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python and pip versions
        run: python -V; pip -V

      - name: Set up headless display
        uses: pyvista/setup-headless-display-action@v1

      - name: Install dependencies and package
        shell: bash
        run: pip install -U -e .'[tests]'

      - name: Install '3d' extra dependencies
        if: ${{ matrix.python-version == 3.9 }}
        shell: bash
        run: pip install .'[3d]'

      - name: Display package versions
        run: pip list

      - name: Run tests
        run: pytest --cov=kikuchipy --pyargs kikuchipy

  coveralls-finish:
    needs: linux
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true
